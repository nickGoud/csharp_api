"use strict";(self["webpackChunkcasestudy"]=self["webpackChunkcasestudy"]||[]).push([[803],{5572:(e,t,s)=>{s.d(t,{C:()=>o,_:()=>n});const a="/api/",n=async e=>{let t,s=r();try{let n=await fetch(`${a}${e}`,{method:"GET",headers:s});t=await n.json()}catch(n){console.log(n),t={error:`Error has occured: ${n.message}`}}return t},o=async(e,t)=>{let s,n=r();try{let o=await fetch(`${a}${e}`,{method:"POST",headers:n,body:JSON.stringify(t)});s=await o.json()}catch(o){s=o}return s},r=()=>{const e=new Headers,t=JSON.parse(sessionStorage.getItem("customer"));return t?(e.append("Content-Type","application/json"),e.append("Authorization","Bearer "+t.token)):e.append("Content-Type","application/json"),e}},8803:(e,t,s)=>{s.r(t),s.d(t,{default:()=>f});var a=s(9835),n=s(1957);const o={class:"text-center q-mt-md"},r=(0,a._)("div",{class:"text-h6"},"Find 3 Closest Branches To:",-1),d=(0,a._)("br",null,null,-1),l={style:{height:"50vh",width:"90vw","margin-left":"5vw",border:"solid"},ref:"mapRef"};function i(e,t,s,i,c,p){const u=(0,a.up)("q-input"),h=(0,a.up)("q-btn");return(0,a.wg)(),(0,a.iD)("div",o,[r,(0,a._)("div",null,[(0,a.Wm)(u,{class:"q-ma-lg text-h5",placeholder:"enter current address",id:"address",modelValue:i.state.address,"onUpdate:modelValue":t[0]||(t[0]=e=>i.state.address=e)},null,8,["modelValue"]),d]),(0,a.Wm)(h,{label:"FIND 3",onClick:i.genMap,class:"q-mb-md",style:{width:"30vw"}},null,8,["onClick"]),(0,a.wy)((0,a._)("div",l,null,512),[[n.F8,!0===i.state.showmap]])])}var c=s(499),p=s(5572);const u={name:"Map",setup(){const e=(0,c.iH)(null);let t=(0,c.qj)({status:"",address:"",showmap:!1});const s=async()=>{try{t.showmap=!0;const s=window.tt;let a=`https://api.tomtom.com/search/2/geocode/${t.address}.json?key=AGyQysxwGDRMe4XXdjCvwSGZ9i9hoXv6`,n=await fetch(a),o=await n.json(),r=o.results[0].position.lat,d=o.results[0].position.lon,l=s.map({key:"AGyQysxwGDRMe4XXdjCvwSGZ9i9hoXv6",container:e.value,source:"vector/1/basic-main",center:[d,r],zoom:8});l.addControl(new s.FullscreenControl),l.addControl(new s.NavigationControl);let i=await(0,p._)(`Branch/${r}/${d}`);i.forEach((e=>{let t=(new s.Marker).setLngLat([e.longitude,e.latitude]).addTo(l),a=25,n=new s.Popup({offset:a});n.setHTML(`<div id="popup">Store#: ${e.id}</div><div>${e.street}, ${e.city}\n <br/>${e.distance.toFixed(2)} km</div>`),t.setPopup(n)}))}catch(s){t.status=s.message}};return{mapRef:e,state:t,genMap:s}}};var h=s(1639),m=s(6611),w=s(4455),v=s(9984),y=s.n(v);const g=(0,h.Z)(u,[["render",i]]),f=g;y()(u,"components",{QInput:m.Z,QBtn:w.Z})}}]);